-- 1. How many runners signed up for each 1 week period? (i.e. week starts 2021-01-01)
SELECT
DATE_TRUNC('day', DATE '2021-01-01' + FLOOR(EXTRACT(EPOCH FROM(registration_date:: timestamp - DATE '2021-01-01'))/(7*24*60*60)) * INTERVAL '7 days') AS signup_week,
COUNT(*) AS signedup_runners
FROM runners
GROUP BY signup_week
ORDER BY signup_week;

-- 2.What was the average time in minutes it took for each runner to arrive at the Pizza Runner HQ to pickup the order?
SELECT
ro.runner_id,
ROUND(AVG(EXTRACT(EPOCH FROM (ro.pickup_time::timestamp - co.order_time::timestamp))/ 60)::NUMERIC,2) AS avg_pickup_time_minutes
FROM customer_orders co
JOIN runner_orders ro
ON co.order_id = ro.order_id 
WHERE ro.pickup_time IS NOT NULL  AND ro.pickup_time <> 'null'
GROUP BY ro.runner_id
ORDER BY ro.runner_id;

-- 3. Is there any relationship between the number of pizzas and how long the order takes to prepare?
WITH order_summary AS (
  SELECT 
    co.order_id,
    COUNT(co.pizza_id) AS pizza_count,
    ROUND(
      (EXTRACT(EPOCH FROM (ro.pickup_time::timestamp - co.order_time::timestamp)) / 60)::NUMERIC, 
      2
    ) AS time_to_prepare
  FROM customer_orders co
  JOIN runner_orders ro 
    ON co.order_id = ro.order_id
  WHERE ro.pickup_time IS NOT NULL AND ro.pickup_time <> 'null'
  GROUP BY co.order_id, ro.pickup_time, co.order_time
)
SELECT 
  pizza_count,
  ROUND(AVG(time_to_prepare), 2) AS avg_time_to_prepare
FROM order_summary
GROUP BY pizza_count
ORDER BY pizza_count;

-- 4. What was the average distance travelled for each customer?
SELECT 
co.customer_id, ROUND(AVG(REPLACE(ro.distance, 'km',''):: NUMERIC),2)
FROM customer_orders co
JOIN runner_orders ro
ON co.order_id = ro.order_id
WHERE ro.distance IS NOT NULL AND ro.distance <> 'null'
GROUP BY co.customer_id 
ORDER BY co.customer_id;

-- 5. What was the difference between the longest and shortest delivery times for all orders?
SELECT 
MAX(REPLACE(REPLACE(REPLACE(duration, 'minutes', ''),'mins', ''), 'minute', ''):: NUMERIC) - 
MIN(REPLACE(REPLACE(REPLACE(duration, 'minutes', ''),'mins', ''), 'minute', ''):: NUMERIC) AS delivery_time_difference
FROM runner_orders
WHERE pickup_time IS NOT NULL AND pickup_time <> 'null';

-- 6. What was the average speed for each runner for each delivery and do you notice any trend for these values?
  SELECT 
  runner_id ,order_id,
  ROUND(
    (REPLACE(distance, 'km', '')::NUMERIC) /
    (REPLACE(REPLACE(REPLACE(duration, 'minutes', ''),'mins', ''), 'minute', ''):: NUMERIC/60),2) AS avg_speed_kmph
  FROM runner_orders
  WHERE pickup_time IS NOT NULL AND pickup_time <> 'null';

-- 7. What is the successful delivery percentage for each runner?
  WITH delivered_orders AS (
    SELECT runner_id , COUNT(order_id) AS count_of_delivered
    FROM runner_orders 
    WHERE pickup_time IS NOT NULL AND pickup_time <> 'null'
     GROUP BY runner_id
    ),
    cancelled_orders AS (
      SELECT runner_id , COUNT(order_id) AS count_of_cancelled
      FROM runner_orders
      WHERE pickup_time IS NULL OR pickup_time = 'null'
      GROUP BY runner_id
      )
      SELECT 
      COALESCE(dos.runner_id ,cos.runner_id) AS runner_id,
      COALESCE(dos.count_of_delivered,0) AS count_of_delivered,
      COALESCE(cos.count_of_cancelled,0) AS count_of_cancelled,
      ROUND(
        COALESCE(dos.count_of_delivered,0):: NUMERIC / 
        (COALESCE(dos.count_of_delivered,0) + COALESCE(cos.count_of_cancelled,0)) * 100,2) AS delivery_percentage
      FROM delivered_orders dos
      FULL JOIN cancelled_orders cos 
      ON dos.runner_id = cos.runner_id 
      ORDER BY runner_id;
